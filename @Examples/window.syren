// this syren file (window.syren) will use styles from its corrosponding css
// file (window.css)

// window's objects, sets, lumps, and variables can all be refered to from any
// other .syren scipt (that executes after it) by prefixing it with "window."
// eg. calling `Window.meter.content += " jk"` from global2nd.syren

// creates a new syren application called app
new Application testapp

// a set (function) that stores syren statements that can be executed later
// using the use statement
set initializeApplication {
	// set app's title by assigning to its 'title' field
	testapp.title = "Test Application"
}

set initializeComponents {
	// creates a shape meter called background, add to testapp's components immediately
	new ShapeMeter background -> testapp
	background.classes += "background"
	background.shape = "rectangle 0, 0, #testapp.w#, #testapp.h#, 8 | fill color 1c1c1c | strokewidth 1.5 | stroke color 777777"

	// create a new text meter called meter
	new TextMeter meter
	meter.content = "Hello, World!"
	// add to testapp's components after setting its properties
	meter -> testapp
}

// a lump is like a set but for rainmeter bangs, these can be used as
// "event handlers" for events
lump myRefreshHandler {
	log "Hello, World!"
	delay 1000
	log "piss pot"
}

// set the onRefreshAction for the app to the lump myRefreshHandler
testapp.onRefresh = myRefreshHandler
// equivalent to
testapp.onRefresh = "[!log \"Hello, World!\"][!delay 1000][!log \"piss pot\"]"

// run statements in these sets
use initializeApplication
use initializeComponents
